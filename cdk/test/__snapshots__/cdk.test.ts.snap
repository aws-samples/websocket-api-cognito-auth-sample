// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test 1`] = `
{
  "Outputs": {
    "AppSyncEventsEndpoint": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "EventsD32975C2",
                "Dns.Http",
              ],
            },
            "/event",
          ],
        ],
      },
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region",
      },
    },
    "UserPoolId": {
      "Value": {
        "Ref": "AuthUserPool8115E87F",
      },
    },
    "UserPoolWebClientId": {
      "Value": {
        "Ref": "AuthUserPoolClientC635291F",
      },
    },
    "WebSocketEndpoint": {
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::GetAtt": [
                "WebsocketApiD2C932E4",
                "ApiEndpoint",
              ],
            },
            "/prod",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AuthUserPool8115E87F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false,
        },
        "AutoVerifiedAttributes": [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthUserPoolClientC635291F": {
      "Properties": {
        "AllowedOAuthFlows": [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "https://example.com",
        ],
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "UserPoolId": {
          "Ref": "AuthUserPool8115E87F",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "EventsD32975C2": {
      "Properties": {
        "EventConfig": {
          "AuthProviders": [
            {
              "AuthType": "API_KEY",
            },
            {
              "AuthType": "AMAZON_COGNITO_USER_POOLS",
              "CognitoConfig": {
                "AwsRegion": {
                  "Ref": "AWS::Region",
                },
                "UserPoolId": {
                  "Ref": "AuthUserPool8115E87F",
                },
              },
            },
          ],
          "ConnectionAuthModes": [
            {
              "AuthType": "API_KEY",
            },
            {
              "AuthType": "AMAZON_COGNITO_USER_POOLS",
            },
          ],
          "DefaultPublishAuthModes": [
            {
              "AuthType": "API_KEY",
            },
            {
              "AuthType": "AMAZON_COGNITO_USER_POOLS",
            },
          ],
          "DefaultSubscribeAuthModes": [
            {
              "AuthType": "API_KEY",
            },
            {
              "AuthType": "AMAZON_COGNITO_USER_POOLS",
            },
          ],
        },
        "Name": "BackendStack-Events-C56593BE",
      },
      "Type": "AWS::AppSync::Api",
    },
    "EventsNamespaceB28AAACA": {
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "EventsD32975C2",
            "ApiId",
          ],
        },
        "Name": "default",
      },
      "Type": "AWS::AppSync::ChannelNamespace",
    },
    "HandlerAuthHandlerEB1BC6C8": {
      "DependsOn": [
        "HandlerAuthHandlerServiceRoleC7D9E369",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "124f907d63d7c431ec7588b5867c8115bfc850554eec397417d4cc1f773e69a8.zip",
        },
        "Environment": {
          "Variables": {
            "APP_CLIENT_ID": {
              "Ref": "AuthUserPoolClientC635291F",
            },
            "USER_POOL_ID": {
              "Ref": "AuthUserPool8115E87F",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "HandlerAuthHandlerServiceRoleC7D9E369",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HandlerAuthHandlerServiceRoleC7D9E369": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "HandlerWebSocketHandlerAD178334": {
      "DependsOn": [
        "HandlerWebSocketHandlerServiceRoleDefaultPolicy29CB2487",
        "HandlerWebSocketHandlerServiceRole834C0C01",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d17255069f25ea6b2610ac0b6126fea8c758027c6242278af035308e9eece195.zip",
        },
        "Environment": {
          "Variables": {
            "CONNECTION_TABLE_NAME": {
              "Ref": "StorageConnectionIdTable8B3A349D",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "HandlerWebSocketHandlerServiceRole834C0C01",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HandlerWebSocketHandlerServiceRole834C0C01": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "HandlerWebSocketHandlerServiceRoleDefaultPolicy29CB2487": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StorageConnectionIdTable8B3A349D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StorageConnectionIdTable8B3A349D",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    {
                      "Ref": "WebsocketApiD2C932E4",
                    },
                    "/*/*/@connections/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "HandlerWebSocketHandlerServiceRoleDefaultPolicy29CB2487",
        "Roles": [
          {
            "Ref": "HandlerWebSocketHandlerServiceRole834C0C01",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StorageConnectionIdTable8B3A349D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "connectionId",
            "AttributeType": "S",
          },
          {
            "AttributeName": "userId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "userIdIndex",
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "connectionId",
            "KeyType": "HASH",
          },
        ],
        "TimeToLiveSpecification": {
          "AttributeName": "removedAt",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "WebsocketApiAuthorizer8462BD7C": {
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketApiD2C932E4",
        },
        "AuthorizerType": "REQUEST",
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "HandlerAuthHandlerEB1BC6C8",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": [
          "route.request.querystring.idToken",
        ],
        "Name": "Authorizer",
      },
      "Type": "AWS::ApiGatewayV2::Authorizer",
    },
    "WebsocketApiBackendStackWebsocketApiAuthorizerB3A276A3PermissionB6709820": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HandlerAuthHandlerEB1BC6C8",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "WebsocketApiD2C932E4",
              },
              "/authorizers/",
              {
                "Ref": "WebsocketApiAuthorizer8462BD7C",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebsocketApiD2C932E4": {
      "Properties": {
        "Name": "Api",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.action",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "WebsocketApiconnectRouteConnectIntegration5ACB3823": {
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketApiD2C932E4",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "HandlerWebSocketHandlerAD178334",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebsocketApiconnectRouteConnectIntegrationPermissionC03255D5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HandlerWebSocketHandlerAD178334",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "WebsocketApiD2C932E4",
              },
              "/*$connect",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebsocketApiconnectRouteFCBDA9B8": {
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketApiD2C932E4",
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "WebsocketApiAuthorizer8462BD7C",
        },
        "RouteKey": "$connect",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "WebsocketApiconnectRouteConnectIntegration5ACB3823",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebsocketApidefaultRoute88AB6B56": {
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketApiD2C932E4",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "WebsocketApidefaultRouteDefaultIntegration4E7A24BE",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebsocketApidefaultRouteDefaultIntegration4E7A24BE": {
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketApiD2C932E4",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "HandlerWebSocketHandlerAD178334",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebsocketApidefaultRouteDefaultIntegrationPermission32373F5B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HandlerWebSocketHandlerAD178334",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "WebsocketApiD2C932E4",
              },
              "/*$default",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebsocketApidisconnectRoute04ED391F": {
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketApiD2C932E4",
        },
        "AuthorizationType": "NONE",
        "RouteKey": "$disconnect",
        "Target": {
          "Fn::Join": [
            "",
            [
              "integrations/",
              {
                "Ref": "WebsocketApidisconnectRouteDisconnectIntegrationB768D80E",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebsocketApidisconnectRouteDisconnectIntegrationB768D80E": {
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketApiD2C932E4",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region",
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "HandlerWebSocketHandlerAD178334",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebsocketApidisconnectRouteDisconnectIntegrationPermission54ECF5B3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HandlerWebSocketHandlerAD178334",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "WebsocketApiD2C932E4",
              },
              "/*$disconnect",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebsocketStage50369996": {
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketApiD2C932E4",
        },
        "AutoDeploy": true,
        "StageName": "prod",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
